// ==========================================================================
// Mixins
// ==========================================================================

@mixin e($elements...) {
	@each $element in $elements {
		&__#{$element} {
		@content;
		}
	}
}
  
@mixin m($modifiers...) {
	@each $modifier in $modifiers {
		&--#{$modifier} {
		@content;
		}
	}
}

@mixin flex($disp: flex, $dir: null, $wrap: null, $just: null, $algn: null) {
	display: $disp;
	flex-direction: $dir;
	flex-wrap: $wrap;
	justify-content: $just;
	align-items: $algn;
}

@mixin text($size: null, $weight: null, $height: null, $align: null, $color: null) {
    font-size: $size;
    font-weight: $weight;
	line-height: $height;
    text-align: $align;
    color: $color;
}

@mixin text-colors($map) {
	$base-colors: map-get($map, base);

	@each $theme, $color in $base-colors {
		&--#{$theme} {
		  color: $color;
		}
	}
}

@mixin bg-colors($map) {

	$base-colors: map-get($map, base);
    $hover-colors: map-get($map, hover);

	@each $theme, $color in $base-colors {
	  &--#{$theme} {
		color: $color--white;
		background-color: $color;
		border-color: $color;
	  }
	}

	@each $theme, $color in $hover-colors {
		&--#{$theme} {
		  &:hover {
			background-color: $color;
			border-color: $color;
		  }
		}
	}
}

@mixin mq($break, $type: min) {
	$breakpoint: null;
  
	@if $break == "x-small" {
	  $breakpoint: $brkpoint--xs;
	} @else if $break == "small" {
	  $breakpoint: $brkpoint--sm;
	} @else if $break == "medium" {
	  $breakpoint: $brkpoint--md;
	} @else if $break == "large" {
	  $breakpoint: $brkpoint--lg;
	} @else {
	  @error "Whoops! No value could be retrieved for `#{$break}`.";
	}
  
	@if $breakpoint {
	  @if $type == min {
		@media (min-width: #{$breakpoint}) {
		  @content;
		}
	  } @else if $type == max {
		@media (max-width: #{$breakpoint - 1px}) {
		  @content;
		}
	  }
	}
}